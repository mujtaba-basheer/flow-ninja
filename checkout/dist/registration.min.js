const DEFAULT_BUSINESS_MODEL="merchant",DUPLICATE_EMAIL_RESPONSE_CODE="client_with_same_email_already_exists",EMAIL_IN_USE_ERROR_CODE="email_address_is_already_registered_as_admin_on_another_client",LAMBDA_PROXY_URL="https://checkout-website-cko-web.vercel.app",formSubmissionStatus={emailExistsError:1,submitted:2,unknownError:3};let formStatus=null;const getGCFormValues=(a,b)=>b.map(b=>{var c;return null===(c=a.form.getFieldById(b))||void 0===c?void 0:c.getValue()}),isAPIErrorException=a=>void 0!==a.request_id,setView=()=>{const a=document.getElementById("default-block"),b=document.getElementById("error-block"),c=document.querySelector(`div[gcdc-processed]`);switch(formStatus){case 2:{a.style.display="flex",b.style.display="none";break}default:{a.style.display="none",b.style.display="flex",c.remove();break}}},preFormSubmission=async a=>{const b=a.detail,[c,d,e,f]=getGCFormValues(b,["first_name","last_name","email","company"]);if(e.endsWith("@checkout.com"))return formStatus=formSubmissionStatus.emailExistsError,void setView();try{const a=await fetch(`${LAMBDA_PROXY_URL}/api/nas-sandbox-account`,{method:"POST",body:JSON.stringify({first_name:c,last_name:d,work_email:e,trading_name:f,business_model:DEFAULT_BUSINESS_MODEL}),headers:{"Content-Type":"application/json"}});if(!a.ok)throw await a.json();formStatus=formSubmissionStatus.submitted}catch(a){console.error(a),formStatus=isAPIErrorException(a)&&(a.error_codes.includes(DUPLICATE_EMAIL_RESPONSE_CODE)||a.error_codes.includes(EMAIL_IN_USE_ERROR_CODE))?formSubmissionStatus.emailExistsError:formSubmissionStatus.unknownError}setView()};window.addEventListener("gcdcGateSubmit",preFormSubmission);