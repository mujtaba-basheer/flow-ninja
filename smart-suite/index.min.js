const wait=a=>new Promise(b=>{setTimeout(()=>b(null),a)}),numFormat=new Intl.NumberFormat("en-IN",{maximumFractionDigits:0,minimumFractionDigits:0});window.addEventListener("load",()=>{{const a=$("#nav-lightbox"),b=$("#w-dropdown-toggle-0");a.on("click",()=>b.trigger("mouseup"))}const a=document.getElementById("templates-count"),b=document.getElementById("teams-count"),d=document.getElementById("response-time"),e=+a.getAttribute("data-value"),f=+b.getAttribute("data-value"),g=+d.getAttribute("data-value"),h={rootMargin:"0px 0px 0px 0px",threshold:1},i=new IntersectionObserver((b,d)=>{b.forEach(async b=>{if(b.isIntersecting){a.textContent="0";let f=0;for(let b=0;200>=b&&f<=e;b++)await wait(10),a.textContent=numFormat.format(f),f+=e/200;f<e&&(await wait(10),a.textContent=numFormat.format(e)),d.unobserve(b.target)}})},h);i.observe(a);const j=new IntersectionObserver((a,d)=>{a.forEach(async a=>{if(a.isIntersecting){b.textContent="0";let e=0;for(let a=0;200>=a&&e<=f;a++)await wait(10),b.textContent=numFormat.format(e),e+=f/200;e<f&&(await wait(10),b.textContent=numFormat.format(f)),d.unobserve(a.target)}})},h);j.observe(b);const k=new IntersectionObserver((a,b)=>{a.forEach(async a=>{if(a.isIntersecting){d.textContent="0";let e=0;for(let a=0;200>=a&&e<=g;a++)await wait(10),d.textContent=numFormat.format(e),e+=g/200;e<g&&(await wait(10),d.textContent=numFormat.format(g)),b.unobserve(a.target)}})},h);k.observe(d)});